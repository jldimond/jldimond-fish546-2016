data5 <- data4[apply(data4[c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,
31,33,35,37,39,41,43,45,47,49,51)],1,
function(z) !any(z==0)),]
library("edgeR")
#read in the file to edgeR
counts <- DGEList(counts=data5)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
View(counts2_cpm)
princomp(counts2_cpm)
pca_normCounts <- princomp(counts2_cpm)
data6 <- data5[,c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,
38,40,42,44,46,48,50,52)]
counts <- DGEList(counts=data6)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
pca_normCounts <- princomp(counts2_cpm)
plot(pca_normCounts)
summary(counts2_cpm)
biplot(counts2_cpm)
biplot(prcomp(counts2_cpm, scale = TRUE))
summary(pca_normCounts)
biplot(pca_normCounts)
lm103 <- lm(counts2_cpm[,2] ~ counts2_cpm[,1])
lm104 <- lm(counts2_cpm[,4] ~ counts2_cpm[,3])
lm105 <- lm(counts2_cpm[,6] ~ counts2_cpm[,5])
lm106 <- lm(counts2_cpm[,8] ~ counts2_cpm[,7])
lm107 <- lm(counts2_cpm[,10] ~ counts2_cpm[,9])
lm108 <- lm(counts2_cpm[,12] ~ counts2_cpm[,11])
lm109 <- lm(counts2_cpm[,14] ~ counts2_cpm[,13])
lm110 <- lm(counts2_cpm[,16] ~ counts2_cpm[,15])
lm111 <- lm(counts2_cpm[,18] ~ counts2_cpm[,17])
lm112 <- lm(counts2_cpm[,20] ~ counts2_cpm[,19])
lm114 <- lm(counts2_cpm[,22] ~ counts2_cpm[,21])
lm115 <- lm(counts2_cpm[,24] ~ counts2_cpm[,23])
lm116 <- lm(counts2_cpm[,26] ~ counts2_cpm[,25])
lm117 <- lm(counts2_cpm[,28] ~ counts2_cpm[,27])
lm118 <- lm(counts2_cpm[,30] ~ counts2_cpm[,29])
lm121 <- lm(counts2_cpm[,32] ~ counts2_cpm[,31])
lm122 <- lm(counts2_cpm[,34] ~ counts2_cpm[,33])
lm123 <- lm(counts2_cpm[,36] ~ counts2_cpm[,35])
lm124 <- lm(counts2_cpm[,38] ~ counts2_cpm[,37])
lm125 <- lm(counts2_cpm[,40] ~ counts2_cpm[,39])
lm126 <- lm(counts2_cpm[,42] ~ counts2_cpm[,41])
lm127 <- lm(counts2_cpm[,44] ~ counts2_cpm[,43])
lm128 <- lm(counts2_cpm[,46] ~ counts2_cpm[,45])
lm129 <- lm(counts2_cpm[,48] ~ counts2_cpm[,47])
lm130 <- lm(counts2_cpm[,50] ~ counts2_cpm[,49])
lm131 <- lm(counts2_cpm[,52] ~ counts2_cpm[,51])
resid103 <- residuals(lm103)
resid104 <- residuals(lm104)
resid105 <- residuals(lm105)
resid106 <- residuals(lm106)
resid107 <- residuals(lm107)
resid108 <- residuals(lm108)
resid109 <- residuals(lm109)
resid110 <- residuals(lm110)
resid111 <- residuals(lm111)
resid112 <- residuals(lm112)
resid114 <- residuals(lm114)
resid115 <- residuals(lm115)
resid116 <- residuals(lm116)
resid117 <- residuals(lm117)
resid118 <- residuals(lm118)
resid121 <- residuals(lm121)
resid122 <- residuals(lm122)
resid123 <- residuals(lm123)
resid124 <- residuals(lm124)
resid125 <- residuals(lm125)
resid126 <- residuals(lm126)
resid127 <- residuals(lm127)
resid128 <- residuals(lm128)
resid129 <- residuals(lm129)
resid130 <- residuals(lm130)
resid131 <- residuals(lm131)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid112, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
library("edgeR")
#read in the file to edgeR
counts <- DGEList(counts=data5)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=T
gy
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
lm103 <- lm(counts2_cpm[,2] ~ counts2_cpm[,1])
lm104 <- lm(counts2_cpm[,4] ~ counts2_cpm[,3])
lm105 <- lm(counts2_cpm[,6] ~ counts2_cpm[,5])
lm106 <- lm(counts2_cpm[,8] ~ counts2_cpm[,7])
lm107 <- lm(counts2_cpm[,10] ~ counts2_cpm[,9])
lm108 <- lm(counts2_cpm[,12] ~ counts2_cpm[,11])
lm109 <- lm(counts2_cpm[,14] ~ counts2_cpm[,13])
lm110 <- lm(counts2_cpm[,16] ~ counts2_cpm[,15])
lm111 <- lm(counts2_cpm[,18] ~ counts2_cpm[,17])
lm112 <- lm(counts2_cpm[,20] ~ counts2_cpm[,19])
lm114 <- lm(counts2_cpm[,22] ~ counts2_cpm[,21])
lm115 <- lm(counts2_cpm[,24] ~ counts2_cpm[,23])
lm116 <- lm(counts2_cpm[,26] ~ counts2_cpm[,25])
lm117 <- lm(counts2_cpm[,28] ~ counts2_cpm[,27])
lm118 <- lm(counts2_cpm[,30] ~ counts2_cpm[,29])
lm121 <- lm(counts2_cpm[,32] ~ counts2_cpm[,31])
lm122 <- lm(counts2_cpm[,34] ~ counts2_cpm[,33])
lm123 <- lm(counts2_cpm[,36] ~ counts2_cpm[,35])
lm124 <- lm(counts2_cpm[,38] ~ counts2_cpm[,37])
lm125 <- lm(counts2_cpm[,40] ~ counts2_cpm[,39])
lm126 <- lm(counts2_cpm[,42] ~ counts2_cpm[,41])
lm127 <- lm(counts2_cpm[,44] ~ counts2_cpm[,43])
lm128 <- lm(counts2_cpm[,46] ~ counts2_cpm[,45])
lm129 <- lm(counts2_cpm[,48] ~ counts2_cpm[,47])
lm130 <- lm(counts2_cpm[,50] ~ counts2_cpm[,49])
lm131 <- lm(counts2_cpm[,52] ~ counts2_cpm[,51])
resid103 <- residuals(lm103)
resid104 <- residuals(lm104)
resid105 <- residuals(lm105)
resid106 <- residuals(lm106)
resid107 <- residuals(lm107)
resid108 <- residuals(lm108)
resid109 <- residuals(lm109)
resid110 <- residuals(lm110)
resid111 <- residuals(lm111)
resid112 <- residuals(lm112)
resid114 <- residuals(lm114)
resid115 <- residuals(lm115)
resid116 <- residuals(lm116)
resid117 <- residuals(lm117)
resid118 <- residuals(lm118)
resid121 <- residuals(lm121)
resid122 <- residuals(lm122)
resid123 <- residuals(lm123)
resid124 <- residuals(lm124)
resid125 <- residuals(lm125)
resid126 <- residuals(lm126)
resid127 <- residuals(lm127)
resid128 <- residuals(lm128)
resid129 <- residuals(lm129)
resid130 <- residuals(lm130)
resid131 <- residuals(lm131)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid112, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
#plot residuals
pca <- princomp(resid_all)
biplot(pca)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
pca <- princomp(resid_all)
biplot(pca)
pca$Comp.2
View(resid_all)
resid_t <- t(resid_all)
pca <- princomp(resid_t)
data <- read.delim("~/snpEff/data3-2.txt", header=FALSE)
# Since the base counts were split into four columns, these need
# to be summed
data2 <- t(sapply(seq(4,ncol(data), by=4), function(i) {
indx <- i:(i+3)
rowSums(data[indx[indx <= ncol(data)]])}))
#The resulting file needs to be transposed and turned into a dataframe
data3 <- as.data.frame(t(data2))
#Add header names
header <- read.delim("~/snpEff/header_data3.txt", header=FALSE)
names <- as.vector(t(header))
colnames(data3) <- names
#Select samples of interest (some have very low sample sizes)
data4 <- data3[,c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,
22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
data5 <- data4[apply(data4[c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,
31,33,35,37,39,41,43,45,47,49,51)],1,
function(z) !any(z==0)),]
data6 <- data5[,c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,
38,40,42,44,46,48,50,52)]
counts <- DGEList(counts=data6)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
plotMDS(counts2)
counts2 <- equalizeLibSizes(counts)
counts2$samples
summary(counts2$pseudo.counts)
?cpm
data2.2 <- read.delim("data3.str", header=FALSE)
setwd("~/Documents/Projects/PoritesRADseq/jldimond-fish546-2016/analyses/ipyrad_analysis/data3_outfiles")
data2.2 <- read.delim("data3.str", header=FALSE)
data <- data2.2[,colSums(is.na(data2.2))<nrow(data2.2)]
data2 <- t(data)
a1 <- read.table("data3.geno", colClasses = 'character', header = FALSE)
a2 <- read.fwf("data3.geno", widths=rep(1, max(nchar(a1$V1))), colClasses = 'numeric', header=FALSE)
header <- read.delim("header_data3.txt", header=FALSE)
names <- t(header)
names2 <-as.vector(names)
colnames(a2) <- names2
a3 <- a2[,c(1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
a4 <- a3[,c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51)]
a5 <- a4[!rowSums(a4[-c(1:2)] == 9) >= 1,]
View(`a5`)
a6 <- t(a5)
View(`a6`)
pca <- prcomp(a6)
summary(pca)
eig <- (pca$sdev)^2
#plot
biplot(pca)
# Correlation between variables and principal components
var_cor_func <- function(var.loadings, comp.sdev){
var.loadings*comp.sdev
}
# Variable correlation/coordinates
loadings <- pca$rotation
sdev <- pca$sdev
var.coord <- var.cor <- t(apply(loadings, 1, var_cor_func, sdev))
head(var.coord[, 1:4])
# Plot the correlation circle
a <- seq(0, 2*pi, length = 100)
plot( cos(a), sin(a), type = 'l', col="gray",
xlab = "PC1",  ylab = "PC2")
abline(h = 0, v = 0, lty = 2)
# Add active variables
arrows(0, 0, var.coord[, 1], var.coord[, 2],
length = 0.1, angle = 15, code = 2)
# Add labels
text(var.coord, labels=rownames(var.coord), cex = 1, adj=1)
data <- read.delim("data3-2.txt", header=FALSE)
# Since the base counts were split into four columns, these need
# to be summed
data2 <- t(sapply(seq(4,ncol(data), by=4), function(i) {
indx <- i:(i+3)
rowSums(data[indx[indx <= ncol(data)]])}))
#The resulting file needs to be transposed and turned into a dataframe
data3 <- as.data.frame(t(data2))
#Add header names
header <- read.delim("header_data3.txt", header=FALSE)
names <- as.vector(t(header))
colnames(data3) <- names
#Select samples of interest (some have very low sample sizes)
data4 <- data3[,c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,
22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
data <- read.delim("data3-2.txt", header=FALSE)
data <- read.delim("data3-2.txt", header=FALSE)
# Since the base counts were split into four columns, these need
# to be summed
data2 <- t(sapply(seq(4,ncol(data), by=4), function(i) {
indx <- i:(i+3)
rowSums(data[indx[indx <= ncol(data)]])}))
View(data2)
data3 <- as.data.frame(t(data2))
#Add header names
header <- read.delim("header_data3.txt", header=FALSE)
names <- as.vector(t(header))
colnames(data3) <- names
#Select samples of interest (some have very low sample sizes)
data4 <- data3[,c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,
22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
data5 <- data4[apply(data4[c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,
31,33,35,37,39,41,43,45,47,49,51)],1,
function(z) !any(z==0)),]
library("edgeR")
#read in the file to edgeR
counts <- DGEList(counts=data5)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
lm103 <- lm(counts2_cpm[,2] ~ counts2_cpm[,1])
lm104 <- lm(counts2_cpm[,4] ~ counts2_cpm[,3])
lm105 <- lm(counts2_cpm[,6] ~ counts2_cpm[,5])
lm106 <- lm(counts2_cpm[,8] ~ counts2_cpm[,7])
lm107 <- lm(counts2_cpm[,10] ~ counts2_cpm[,9])
lm108 <- lm(counts2_cpm[,12] ~ counts2_cpm[,11])
lm109 <- lm(counts2_cpm[,14] ~ counts2_cpm[,13])
lm110 <- lm(counts2_cpm[,16] ~ counts2_cpm[,15])
lm111 <- lm(counts2_cpm[,18] ~ counts2_cpm[,17])
lm112 <- lm(counts2_cpm[,20] ~ counts2_cpm[,19])
lm114 <- lm(counts2_cpm[,22] ~ counts2_cpm[,21])
lm115 <- lm(counts2_cpm[,24] ~ counts2_cpm[,23])
lm116 <- lm(counts2_cpm[,26] ~ counts2_cpm[,25])
lm117 <- lm(counts2_cpm[,28] ~ counts2_cpm[,27])
lm118 <- lm(counts2_cpm[,30] ~ counts2_cpm[,29])
lm121 <- lm(counts2_cpm[,32] ~ counts2_cpm[,31])
lm122 <- lm(counts2_cpm[,34] ~ counts2_cpm[,33])
lm123 <- lm(counts2_cpm[,36] ~ counts2_cpm[,35])
lm124 <- lm(counts2_cpm[,38] ~ counts2_cpm[,37])
lm125 <- lm(counts2_cpm[,40] ~ counts2_cpm[,39])
lm126 <- lm(counts2_cpm[,42] ~ counts2_cpm[,41])
lm127 <- lm(counts2_cpm[,44] ~ counts2_cpm[,43])
lm128 <- lm(counts2_cpm[,46] ~ counts2_cpm[,45])
lm129 <- lm(counts2_cpm[,48] ~ counts2_cpm[,47])
lm130 <- lm(counts2_cpm[,50] ~ counts2_cpm[,49])
lm131 <- lm(counts2_cpm[,52] ~ counts2_cpm[,51])
resid103 <- residuals(lm103)
resid104 <- residuals(lm104)
resid105 <- residuals(lm105)
resid106 <- residuals(lm106)
resid107 <- residuals(lm107)
resid108 <- residuals(lm108)
resid109 <- residuals(lm109)
resid110 <- residuals(lm110)
resid111 <- residuals(lm111)
resid112 <- residuals(lm112)
resid114 <- residuals(lm114)
resid115 <- residuals(lm115)
resid116 <- residuals(lm116)
resid117 <- residuals(lm117)
resid118 <- residuals(lm118)
resid121 <- residuals(lm121)
resid122 <- residuals(lm122)
resid123 <- residuals(lm123)
resid124 <- residuals(lm124)
resid125 <- residuals(lm125)
resid126 <- residuals(lm126)
resid127 <- residuals(lm127)
resid128 <- residuals(lm128)
resid129 <- residuals(lm129)
resid130 <- residuals(lm130)
resid131 <- residuals(lm131)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
par(mfrow = c(7, 4))
par(mar = c(2,2,2,2))
par(oma = c(2,2,1,1))
for (i in 1:26){
plot(resid_all[,i])
}
par(mfrow = c(7, 4))
par(mar = c(2,2,2,2))
par(oma = c(2,2,1,1))
for (i in 1:26){
plot(resid_all[,i])
}
resid_t <- t(resid_all)
pca <- prcomp(resid_t)
summary(pca)
# Correlation between variables and principal components
var_cor_func <- function(var.loadings, comp.sdev){
var.loadings*comp.sdev
}
# Variable correlation/coordinates
loadings <- pca$rotation
sdev <- pca$sdev
var.coord <- var.cor <- t(apply(loadings, 1, var_cor_func, sdev))
head(var.coord[, 1:4])
# Plot the correlation circle
a <- seq(0, 2*pi, length = 100)
plot( cos(a), sin(a), type = 'l', col="gray",
xlab = "PC1",  ylab = "PC2")
abline(h = 0, v = 0, lty = 2)
# Add active variables
arrows(0, 0, var.coord[, 1], var.coord[, 2],
length = 0.1, angle = 15, code = 2)
# Add labels
text(var.coord, labels=rownames(var.coord), cex = 1, adj=1)
pca <- prcomp(resid_t)
summary(pca)
eig <- (pca$sdev)^2
#plot
biplot(pca)
eig
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
nmds <- isoMDS(d)
resid_t <- t(resid_all)
d <- dist(resid_t) # euclidean distances between the rows
nmds <- isoMDS(d)
plot(nmds$points, type = "n")
plot(nmds$points)
text(nmds$points, labels = as.character(1:nrow(resid_t)))
View(resid_t)
text(nmds$points, labels = row.names(resid_t))
plot(nmds$points, type = "n")
text(nmds$points, labels = row.names(resid_t))
resid_all_binary <- ifelse(resid_all<=-1, 1, 0)
#proportion of methylated cutsites
prop_methyl <- colSums(resid_all_binary) / nrow(resid_all_binary)
barplot(prop_methyl)
resid_t_binary <- t(resid_all_binary)
d <- dist(resid_t_binary) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",  type="n")
text(x, y, labels = row.names(resid_t_binary), cex=.7)
sinfo <- read.table("data3_sample_info.txt", colClasses = 'character', header = FALSE)
sinfo <- read.table("sample_info.txt", colClasses = 'character', header = FALSE)
View(sinfo)
sinfo2 <- sinfo[2:27,]
View(sinfo2)
tsinfo <- t(sinfo)
#create vectors for morphotype and diameter (note whether sample 101
#was included or not)
type <- tsinfo[3,]
diam <- tsinfo[5,]
View(resid_t_binary)
tsinfo <- t(sinfo2)
type <- tsinfo[3,]
diam <- tsinfo[5,]
View(tsinfo)
type2 <- tsinfo[3,1:9;11:26]
type2 <- tsinfo[3,c(1:9,11:26)]
type <- tsinfo[3,]
type2
diam2 <- tsinfo[5,c(1:9,11:26)]
resid_t_binary <- t(resid_all_binary)
d <- dist(resid_t_binary) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",  type="n")
text(x, y, labels = row.names(resid_t_binary),
col = rainbow(length(diam2))[rank(diam2)], cex=.7)
#MDS
resid_t_binary <- t(resid_all_binary)
d <- dist(resid_t_binary) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",  type="n")
text(x, y, labels = row.names(resid_t_binary),
col = rainbow(length(type2))[rank(type2)], cex=.7)
depth <- tsinfo[2,c(1:9,11:26)]
resid_t_binary <- t(resid_all_binary)
d <- dist(resid_t_binary) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",  type="n")
text(x, y, labels = row.names(resid_t_binary),
col = rainbow(length(depth))[rank(depth)], cex=.7)
resid_t_binary <- t(resid_all_binary)
d <- dist(resid_t_binary) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",  type="n")
text(x, y, labels = row.names(resid_t_binary),
col = rainbow(length(type2))[rank(type2)], cex=.7)
resid_t_binary <- t(resid_all_binary)
d <- dist(resid_t_binary) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",  type="n")
text(x, y, labels = row.names(resid_t_binary),
col = rainbow(length(diam2))[rank(diam2)], cex=.7)
a1 <- read.table("data3.u.geno", colClasses = 'character', header = FALSE)
a2 <- read.fwf("data3.geno", widths=rep(1, max(nchar(a1$V1))), colClasses = 'numeric', header=FALSE)
header <- read.delim("header_data3.txt", header=FALSE)
names <- t(header)
names2 <-as.vector(names)
colnames(a2) <- names2
a1 <- read.table("data3.u.geno", colClasses = 'character', header = FALSE)
a2 <- read.fwf("data3.u.geno", widths=rep(1, max(nchar(a1$V1))), colClasses = 'numeric', header=FALSE)
header <- read.delim("header_data3.txt", header=FALSE)
names <- t(header)
names2 <-as.vector(names)
colnames(a2) <- names2
#Select samples of interest (some have very low sample sizes)
a3 <- a2[,c(1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
a4 <- a3[,c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51)]
#Get rid of rows with any NAs (9)
a5 <- a4[!rowSums(a4[-c(1:2)] == 9) >= 1,]
View(`a5`)
View(`a3`)
View(`a5`)
View(`a3`)
a4 <- a3[,c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52)]
View(`a4`)
a5 <- a4[!rowSums(a4[-c(1:2)] == 9) >= 1,]
View(`a5`)
a6 <- t(a5)
d <- dist(a6) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS")
diam
View(tsinfo)
type <- tsinfo[3,]
diam <- tsinfo[5,]
text(x, y, labels = row.names(a6), col = rainbow(length(diam))[rank(diam)], cex=.8)
