biplot(pca)
data2.2 <- read.delim("data3.u.str", header=FALSE)
data <- data2.2[,colSums(is.na(data2.2))<nrow(data2.2)]
data2 <- t(data)
data3 <- as.data.frame(data2)
#Extract only ddRAD data
data4 <- data3[,c(5,6,9,10,13,14,17,18,21,22,25,26,29,30,33,34,37,38,41,42,47,48,51,52,55,56,59,60,63,64,69,70,73,74,77,78,81,82,85,86,89,90,93,94,97,98,101,102,105,106,109,110)]
#Remove any SNPs with missing data (-9 is the NA value)
data5 <- data4[!rowSums(data4 == -9) >= 1,]
data6 <-t(data5)
write.table(data6, file = "data3-2.str", row.names = FALSE, col.names = FALSE, quote = FALSE)
library("adegenet")
library("ade4")
genind1 <- read.structure("data3-2.str", n.ind = 26, n.loc = 1117,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
View(data6)
library("adegenet")
library("ade4")
genind1 <- read.structure("data3-2.str", n.ind = 26, n.loc = 1117,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 26, n.loc = 1117,
d
d
d
genind1 <- read.structure("data3-2.str", n.ind = 26, n.loc = 1117,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
View(data5)
rownames(data5) <- data5[1,]
View(data2.2)
data2.2 <- read.delim("data3-2.str", header=FALSE)
View(data2.2)
data2.2 <- read.delim("data3.u.str", header=FALSE)
data <- data2.2[,colSums(is.na(data2.2))<nrow(data2.2)]
data2 <- t(data)
data3 <- as.data.frame(data2)
#Extract only ddRAD data
data4 <- data3[,c(5,6,9,10,13,14,17,18,21,22,25,26,29,30,33,34,37,38,41,42,47,48,51,52,55,56,59,60,63,64,69,70,73,74,77,78,81,82,85,86,89,90,93,94,97,98,101,102,105,106,109,110)]
View(data4)
rownames(data6) <- data6[,1]
View(data6)
write.table(data6, file = "data3-2.str", row.names = FALSE, col.names = FALSE, quote = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 26, n.loc = 1117,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
groups <- find.clusters(a6, max.n.clust=10)
groups <- find.clusters(genind1, max.n.clust=10)
xval <- xvalDapc(genind1, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
gendf <- genind2df(genind1, pop = NULL)
View(gendf)
xval <- xvalDapc(gendf, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval <- xvalDapc(data6, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval <- xvalDapc(genind1@tab, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval[2:6]
dapc1 <- dapc(genind1, pop = groups$grp)
dapc1 <- dapc(genind1, pop = groups$grp)
scatter(dapc1, label.inds = list(air = 0, pch = NA))
compoplot(dapc1, posi="bottomright",
txt.leg=paste("Cluster", 1:3), lab="",
ncol=1, xlab="individuals", col=funky(3))
scatter(dapc1, label.inds = list(air = 0, pch = 0.5))
scatter(dapc1, label.inds = list(air = 1, pch = 0.5))
scatter(dapc1, label.inds = list(air = 0.5, pch = 0.5))
compoplot(dapc1, posi="bottomright",
txt.leg=paste("Cluster", 1:3), lab="",
ncol=1, xlab="individuals", col=funky(3))
scatter(dapc1, label.inds = list(air = 0.5, pch = 0.5))
scatter(dapc1, label.inds = list(air = 0.1, pch = 0.5))
compoplot(dapc1, posi="bottomright",
txt.leg=paste("Cluster", 1:3), lab="",
ncol=1, xlab="individuals", col=funky(3))
scatter(dapc1, label.inds = list(air = 0.05, pch = 0.5))
dapc1$assign
View(sinfo)
View(data2)
View(data4)
View(data3)
View(data3)
data4 <- data3[,c(1,2,5,6,9,10,13,14,17,18,21,22,25,26,29,30,33,34,37,38,41,42,47,48,51,52,55,56,59,60,63,64,69,70,73,74,77,78,81,82,85,86,89,90,93,94,97,98,101,102,105,106,109,110)]
#Remove any SNPs with missing data (-9 is the NA value)
data5 <- data4[!rowSums(data4 == -9) >= 1,]
data6 <-t(data5)
rownames(data6) <- data6[,1]
write.table(data6, file = "data3-2.str", row.names = FALSE, col.names = FALSE, quote = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 26, n.loc = 1117,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
View(data6)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
groups <- find.clusters(genind1, max.n.clust=10)
xval <- xvalDapc(genind1@tab, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval[2:6]
dapc1 <- dapc(genind1, pop = groups$grp)
scatter(dapc1, label.inds = list(air = 0.05, pch = 0.5))
sinfo
boxplot(sinfo[,5] ~ dapc1$assign]
boxplot(sinfo[,5] ~ dapc1$assign)
boxplot(sinfo[,5] ~ dapc1$assign, data = sinfo[,5])
sinfo[,5]
diam2 <- as.numeric(sinfo[,5])
boxplot(diam2 ~ dapc1$assign)
set.seed(4)
contrib <- loadingplot(dapc1$var.contr, axis=1,
thres=.015, lab.jitter=1)
contrib <- loadingplot(dapc1$var.contr, axis=1,
thres=.005, lab.jitter=1)
head(dapc1$var.contr)
tail(dapc1$var.contr)
data6[,1005]
data6[,499]
data6[,1004]
View(data2.2)
data <- data2.2[,colSums(is.na(data2.2))<nrow(data2.2)]
View(data)
unlinkedsnps <- seq(c(1:11822))
colnames(data) <- unlinkedsnps
View(data)
data <- data2.2[,colSums(is.na(data2.2))<nrow(data2.2)]
#Vector of  unlinkedSNP IDs corresponding to data3.snps.map
unlinkedsnps <- seq(c(1:11822))
rownames(data) <- data[,1]
View(data)
unlinkedsnps <- seq(c(0:11822))
colnames(data) <- unlinkedsnps
View(data)
unlinkedsnps <- seq(c(0:11822))
unlinkedsnps <- seq(c(1:11822))
data2 <- t(data)
data3 <- as.data.frame(data2)
View(data3)
#Extract only ddRAD data
data4 <- data3[,c(1,2,5,6,9,10,13,14,17,18,21,22,25,26,29,30,33,34,37,38,41,42,47,48,51,52,55,56,59,60,63,64,69,70,73,74,77,78,81,82,85,86,89,90,93,94,97,98,101,102,105,106,109,110)]
View(data4)
View(data5)
unlinkedsnps <- seq(c(0,1:11822))
unlinkedsnps <- seq(c(1:11822))
unlinkedsnps <- seq(c(-1:11822))
unlinkedsnps <- seq(c(1, 1:11822))
colnames(data) <- unlinkedsnps
View(data)
View(data)
data2 <- data[,2:11823]
colnames(data) <- unlinkedsnps
colnames(data2) <- unlinkedsnps
View(data2)
unlinkedsnps <- seq(c(1:11822))
data2 <- data[,2:11823]
colnames(data2) <- unlinkedsnps
View(data2)
data3 <- cbind(data[,1],data2)
View(data3)
data4 <- t(data3)
View(data4)
data5 <- as.data.frame(data4)
View(data5)
data6 <- data5[,c(1,2,5,6,9,10,13,14,17,18,21,22,25,26,29,30,33,34,37,38,41,42,47,48,51,52,55,56,59,60,63,64,69,70,73,74,77,78,81,82,85,86,89,90,93,94,97,98,101,102,105,106,109,110)]
View(data6)
#Remove any SNPs with missing data (-9 is the NA value)
data5 <- data4[!rowSums(data4 == -9) >= 1,]
data7 <- data6[!rowSums(data6 == -9) >= 1,]
View(data7)
data8 <-t(data7)
View(data8)
rownames(data8) <- data8[,1]
View(data8)
write.table(data6, file = "data3-2.str", row.names = FALSE, col.names = FALSE, quote = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
View(data8)
View(data7)
write.table(data8, file = "data3-2.str", row.names = FALSE, col.names = FALSE, quote = FALSE)
View(data8)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
groups <- find.clusters(genind1, max.n.clust=10)
xval <- xvalDapc(genind1@tab, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval[2:6]
dapc1 <- dapc(genind1, pop = groups$grp)
scatter(dapc1, label.inds = list(air = 0.05, pch = 0.5))
set.seed(4)
contrib <- loadingplot(dapc1$var.contr, axis=1,
thres=.005, lab.jitter=1)
colnames(data8) <- col.names(data8)
write.table(data8, file = "data3-2.str", row.names = FALSE, col.names = TRUE, quote = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
groups <- find.clusters(genind1, max.n.clust=10)
dapc1 <- dapc(genind1, pop = groups$grp)
set.seed(4)
contrib <- loadingplot(dapc1$var.contr, axis=1,
thres=.005, lab.jitter=1)
install.packages("rmarkdown")
setwd("~/Documents/Projects/PoritesRADseq/jldimond-fish546-2016/analyses/ipyrad_analysis/data3_outfiles")
View(data8)
data9 <- data8[,2:1114]
View(data9)
write.table(data8, file = "data3-2.str", row.names = TRUE, col.names = TRUE, quote = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
write.table(data9, file = "data3-2.str", row.names = TRUE, col.names = TRUE, quote = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
diam <- tsinfo[5,]
diam
sinfo
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = TRUE, quiet = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = FALSE,
row.marknames = 1, quiet = FALSE)
groups <- find.clusters(genind1, max.n.clust=10)
dapc1 <- dapc(genind1, pop = groups$grp)
dapc1 <- dapc(genind1, pop = groups$grp)
xval <- xvalDapc(genind1@tab, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE, quiet = TRUE)
xval <- xvalDapc(genind1@tab, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE, ask = FALSE)
install.packages("rmarkdown")
install.packages("rmarkdown")
dapc1 <- dapc(genind1, pop = groups$grp, n.pca=9, n.da=2)
scatter(dapc1, label.inds = list(air = 0.05, pch = 0.5))
scatter(dapc1, label.inds = list(air = 0.05, pch = 0.5)
posi.da = "topleft")
scatter(dapc1, label.inds = list(air = 0.05, pch = 0.5),
posi.da = "topleft")
scatter(dapc1, label.inds = list(air = 0.05, pch = 0.5),
posi.da = "topleft", posi.pca = "topright")
#Cross validation to determine number of PCs to retain
xval <- xvalDapc(genind1@tab, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE, n.pca = 25)
xval <- xvalDapc(genind1@tab, groups$grp, n.pca.max = 25, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval[2:6]
groups <- find.clusters(genind1, max.n.clust=10)
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24)
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24, n.clust = 3)
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24,
choose.n.clust = FALSE, criterion = min)
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24,
choose.n.clust = FALSE, criterion = "min")
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24)
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24,
choose.n.clust = FALSE, criterion = "goodfit")
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24,
choose.n.clust = FALSE, criterion = "min")
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24,
choose.n.clust = FALSE, criterion = "min")
dapc1 <- dapc(genind1, pop = groups$grp, n.pca=9, n.da=2)
scatter(dapc1, label.inds = list(air = 0.05, pch = 0.5),
posi.da = "topleft", posi.pca = "topright")
boxplot(diam2 ~ dapc1$assign, xlab = "Group", ylab =  "diameter")
data_seq = seq(min(as.numeric(diam)), max(as.numeric(diam)), length=25)
col_pal = colorRampPalette(c('blue', 'green', 'red'))(25+1)
cols = col_pal[ cut(as.numeric(diam), data_seq, include.lowest=T) ]
text(x, y, labels = row.names(resid_t_binary),
col = cols, cex=.7)
points(x,y, col = cols, pch = 19)
a6 <- t(a5)
d <- dist(a6) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
a1 <- read.table("data3.u.geno", colClasses = 'character', header = FALSE)
a2 <- read.fwf("data3.u.geno", widths=rep(1, max(nchar(a1$V1))), colClasses = 'numeric', header=FALSE)
header <- read.delim("header_data3.txt", header=FALSE)
names <- t(header)
names2 <-as.vector(names)
colnames(a2) <- names2
#Select samples of interest (some have very low sample sizes)
a3 <- a2[,c(1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
#Matrix with only ddr loci ***if including sample 101
a4 <- a3[,c(1,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52)]
#Matrix with only ddr loci ***if excluding sample 101
#a4 <- a3[,c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52)]
#Get rid of rows with any NAs (9)
a5 <- a4[!rowSums(a4 == 9) >= 1,]
#Read in sample info
sinfo <- read.table("sample_info.txt", colClasses = 'character', header = FALSE)
tsinfo <- t(sinfo)
#create vectors for morphotype and diameter (note whether sample 101
#was included or not)
type <- tsinfo[3,]
diam <- tsinfo[5,]
#MDS
a6 <- t(a5)
d <- dist(a6) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
#This adds a column of color values based on branch diameter
data_seq = seq(min(as.numeric(diam)), max(as.numeric(diam)), length=25)
col_pal = colorRampPalette(c('blue', 'green', 'red'))(25+1)
cols = col_pal[ cut(as.numeric(diam), data_seq, include.lowest=T) ]
text(x, y, labels = row.names(resid_t_binary),
col = cols, cex=.7)
points(x,y, col = cols, pch = 19)
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",  type="n")
points(x,y, col = cols, pch = 19)
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
col_pal = colorRampPalette(c('blue', 'green'))(25+1)
cols = col_pal[ cut(as.numeric(diam), data_seq, include.lowest=T) ]
text(x, y, labels = row.names(resid_t_binary),
col = cols, cex=.7)
points(x,y, col = cols, pch = 19)
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="MDS colored by branch diamater",  type="n")
points(x,y, col = cols, pch = 19)
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'branch diamater')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
col_pal = colorRampPalette(c('blue', 'red'))(25+1)
cols = col_pal[ cut(as.numeric(diam), data_seq, include.lowest=T) ]
text(x, y, labels = row.names(resid_t_binary),
col = cols, cex=.7)
points(x,y, col = cols, pch = 19)
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="MDS colored by branch diamater",  type="n")
points(x,y, col = cols, pch = 19)
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'branch diamater')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
col_pal = colorRampPalette(c('blue', 'red'))
cols = col_pal[ cut(as.numeric(diam), data_seq, include.lowest=T) ]
text(x, y, labels = row.names(resid_t_binary),
col = cols, cex=.7)
points(x,y, col = cols, pch = 19)
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="MDS colored by branch diamater",  type="n")
points(x,y, col = cols, pch = 19)
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'branch diamater')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
cols = col_pal[ cut(as.numeric(diam), data_seq]
col_pal
dat$Col <- col_pal(27)[as.numeric(cut(diam,breaks = 27))]
data_seq = seq(min(as.numeric(diam)), max(as.numeric(diam)), length=27)
col_pal = colorRampPalette(c('blue', 'red'))
cols = col_pal[cut(as.numeric(diam), data_seq]
text(x, y, labels = row.names(resid_t_binary),
col = cols, cex=.7)
points(x,y, col = cols, pch = 19)
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="MDS colored by branch diamater",  type="n")
points(x,y, col = cols, pch = 19)
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'branch diamater')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
cols = col_pal[cut(as.numeric(diam), 27]
orderedcolors2 <- rainbow(length(diam))[order(order(diam))]
cols <- rainbow(length(diam))[order(order(diam))]
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="MDS colored by branch diamater",  type="n")
points(x,y, col = cols, pch = 19)
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'branch diamater')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
cols <- col_pal(length(diam))[order(order(diam))]
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="MDS colored by branch diamater",  type="n")
points(x,y, col = cols, pch = 19)
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'branch diamater')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
text(x, y, labels = row.names(resid_t_binary),
col = cols, cex=.7)
View(`a6`)
text(x, y, labels = row.names(a6),
col = cols, cex=.7)
data_seq = seq(min(as.numeric(diam)), max(as.numeric(diam)), length=27)
col_pal = colorRampPalette(c('blue', 'red'))
cols = col_pal[cut(as.numeric(diam), 27]
text(x, y, labels = row.names(a6),
col = cols, cex=.7)
points(x,y, col = cols, pch = 19)
col_pal = colorRampPalette(c('blue', 'red'))
cols <- col_pal(length(diam))[order(order(diam))]
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="MDS colored by branch diamater",  type="n")
points(x,y, col = cols, pch = 19)
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'branch diamater')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
text(text(x, y, labels = row.names(a6), cex=.7))
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="MDS colored by branch diamater",  type="n")
points(x,y, col = cols, pch = 19)
text(text(x, y, labels = row.names(a6), cex=.7))
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'branch diamater')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
####################################################################
cols
plot(cols)
plot(diam, cols
)
legend_image
col = rainbow(length(diam))[rank(diam)])
col = rainbow(length(diam))[rank(diam)])
col = rainbow(length(diam)[rank(diam)])
col = rainbow(length(as.integer(diam))[rank(as.integer(diam))])
col = rainbow(length(as.integer(diam))[rank(as.integer(diam))])
col = rainbow(length(as.integer(diam))[rank(as.integer(diam))]
p
data_seq = seq(min(as.numeric(diam)), max(as.numeric(diam)), length=25)
col_pal = colorRampPalette(c('blue', 'green', 'red'))(25+1)
cols = col_pal[ cut(as.numeric(diam), data_seq, include.lowest=T) ]
text(x, y, labels = row.names(resid_t_binary),
col = cols, cex=.7)
points(x,y, col = cols, pch = 19)
layout(matrix(1:2,ncol=2), width = c(3,1),height = c(1,1))
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="MDS colored by branch diamater",  type="n")
points(x,y, col = cols, pch = 19)
legend_image <- as.raster(matrix(sort(cols, decreasing = TRUE), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'branch diamater')
text(x=1.5, y = seq(0,1,l=5), labels = seq(6,26,l=5))
rasterImage(legend_image, 0, 0, 1,1)
head(a5)
head(sinfo)
?knitr
getwd()
data5 <- data4[apply(data4[c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,
31,33,35,37,39,41,43,45,47,49)],1,
function(z) !any(z==0)),]
data <- read.delim("data3-2.txt", header=FALSE)
```
##Since the base counts were split into four columns, these need to be summed.
```{r}
data2 <- t(sapply(seq(4,ncol(data), by=4), function(i) {
indx <- i:(i+3)
rowSums(data[indx[indx <= ncol(data)]])}))
```
##The resulting file needs to be transposed and turned into a dataframe.
```{r}
data3 <- as.data.frame(t(data2))
#Add column with locus number (CHROM from .vcf file)
locus <- data[,1]
row.names(data3) <- locus
#Add header names
header <- read.delim("header_data3.txt", header=FALSE)
names <- as.vector(t(header))
colnames(data3) <- names
```
##Select samples of interest (some have very low sample sizes)
```{r}
data4 <- data3[,c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
data5 <- data4[apply(data4[c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,
31,33,35,37,39,41,43,45,47,49)],1,
function(z) !any(z==0)),]
par(mfrow = c(7, 4))
par(mar = c(2,2,2,2))
par(oma = c(2,2,1,1))
for (i in seq(1,51, by = 2)){
plot(data5[,i], data5[,i+1], xlab= colnames(data5[,i]),
ylab= colnames(data5[,i+1]))
}
